#!/bin/bash

# HackRell - malware/malware_static.sh
# Realiza análisis estático de archivos sospechosos para identificar características de malware.

# Cargar utilidades de color y legal
source "$(dirname "$0")"/../utils/colors.sh
source "$(dirname "$0")"/../utils/legal.sh

# Directorio para logs
LOG_DIR="/var/log/hackrell"
mkdir -p "$LOG_DIR" # Asegurarse de que el directorio de logs existe

function malware_static_menu() {
    check_root
    display_legal_warning
    clear
    print_banner "MÓDULO DE ANÁLISIS ESTÁTICO DE MALWARE"
    echo ""
    print_info "Este módulo realiza análisis estático de archivos sospechosos sin ejecutarlos."
    print_warning "Siempre tenga precaución al manejar archivos potencialmente maliciosos."
    echo ""

    read -p "${C_GREEN}Ingrese la ruta al archivo a analizar: ${C_RESET}" target_file

    if [ ! -f "$target_file" ]; then
        print_error "Archivo no encontrado: $target_file. Volviendo al menú principal."
        sleep 3
        return 1
    fi

    local log_file="${LOG_DIR}/malware_static_$(basename "$target_file")_$(date +%Y%m%d_%H%M%S).log"

    print_info "Iniciando análisis estático de $target_file..."
    print_info "Los resultados se guardarán en $log_file"
    echo ""

    echo "${BOLD}--- Información del archivo (file) ---${C_RESET}" | tee -a "$log_file"
    file "$target_file" | tee -a "$log_file"
    echo ""

    echo "${BOLD}--- Cadenas de texto (strings) ---${C_RESET}" | tee -a "$log_file"
    strings "$target_file" | tee -a "$log_file"
    echo ""

    echo "${BOLD}--- Binwalk (firmware/archivos embebidos) ---${C_RESET}" | tee -a "$log_file"
    binwalk "$target_file" | tee -a "$log_file"
    echo ""

    echo "${BOLD}--- Readelf (información ELF) ---${C_RESET}" | tee -a "$log_file"
    readelf -a "$target_file" 2>/dev/null | tee -a "$log_file"
    echo ""

    echo "${BOLD}--- Objdump (desensamblado) ---${C_RESET}" | tee -a "$log_file"
    objdump -d "$target_file" 2>/dev/null | tee -a "$log_file"
    echo ""

    print_success "Análisis estático completado. Resultados guardados en $log_file"
    print_info "Revise el archivo de log para buscar indicadores de compromiso (IOCs)."
    echo ""
    print_info "Presione [ENTER] para continuar."
    read -r
}

# Llamar a la función principal si el script se ejecuta directamente
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    malware_static_menu
fi

