#!/bin/bash

# HackRell - malware/malware_dynamic.sh
# Realiza un análisis dinámico (simulado) de archivos sospechosos en un entorno controlado.

# Cargar utilidades de color y legal
source "$(dirname "$0")"/../utils/colors.sh
source "$(dirname "$0")"/../utils/legal.sh

# Directorio para logs
LOG_DIR="/var/log/hackrell"
mkdir -p "$LOG_DIR" # Asegurarse de que el directorio de logs existe

function malware_dynamic_menu() {
    check_root
    display_legal_warning
    clear
    print_banner "MÓDULO DE ANÁLISIS DINÁMICO DE MALWARE (SIMULADO)"
    echo ""
    print_error "¡ADVERTENCIA CRÍTICA!"
    print_error "Este módulo ejecuta el archivo proporcionado. Ejecutar malware real puede COMPROMETER SU SISTEMA."
    print_error "UTILICE ESTO SÓLO CON ARCHIVOS DE PRUEBA SEGUROS Y EN UN ENTORNO AISLADO (VM, CONTENEDOR)."
    print_warning "HackRell no proporciona un sandbox de ejecución completo. La ejecución es bajo su propio riesgo."
    echo ""

    read -p "${C_GREEN}Ingrese la ruta al archivo ejecutable a analizar dinámicamente: ${C_RESET}" target_file

    if [ ! -f "$target_file" ]; then
        print_error "Archivo no encontrado: $target_file. Volviendo al menú principal.""
        sleep 3
        return 1
    fi

    if [ ! -x "$target_file" ]; then
        print_warning "El archivo $target_file no es ejecutable. Intentando darle permisos de ejecución."
        chmod +x "$target_file"
        if [ ! -x "$target_file" ]; then
            print_error "No se pudo hacer ejecutable el archivo. Volviendo al menú principal."
            sleep 3
            return 1
        fi
    fi

    local log_prefix="${LOG_DIR}/malware_dynamic_$(basename "$target_file")_$(date +%Y%m%d_%H%M%S)"

    print_info "Iniciando análisis dinámico de $target_file..."
    print_info "Se observarán las llamadas al sistema (strace) y llamadas a librerías (ltrace)."
    print_info "Los resultados se guardarán en ${log_prefix}.strace y ${log_prefix}.ltrace"
    echo ""

    read -p "${C_YELLOW}¿Está ABSOLUTAMENTE seguro de que desea ejecutar este archivo? (escriba 'SI' para confirmar): ${C_RESET}" confirm_execution

    if [ "$confirm_execution" != "SI" ]; then
        print_error "Ejecución cancelada por el usuario. Volviendo al menú principal."
        sleep 3
        return 1
    fi

    print_info "Ejecutando el archivo con strace en una nueva ventana..."
    xterm -e "strace -o ${log_prefix}.strace $target_file" &
    local strace_pid=$!

    print_info "Ejecutando el archivo con ltrace en una nueva ventana..."
    xterm -e "ltrace -o ${log_prefix}.ltrace $target_file" &
    local ltrace_pid=$!

    print_info "Ambos análisis se están ejecutando en nuevas ventanas. Cierre las ventanas de xterm cuando el programa termine o cuando desee detener el análisis."
    print_info "Presione [ENTER] aquí para continuar una vez que haya cerrado las ventanas de análisis."
    read -r

    # Intentar matar los procesos si aún están activos (el usuario debería cerrarlos manualmente)
    kill $strace_pid 2>/dev/null
    kill $ltrace_pid 2>/dev/null
    wait $strace_pid 2>/dev/null
    wait $ltrace_pid 2>/dev/null

    print_success "Análisis dinámico completado (o detenido). Resultados guardados en ${log_prefix}.strace y ${log_prefix}.ltrace"
    print_info "Revise los archivos de log para identificar comportamientos sospechosos."
    echo ""
    print_info "Presione [ENTER] para continuar."
    read -r
}

# Llamar a la función principal si el script se ejecuta directamente
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    malware_dynamic_menu
fi

